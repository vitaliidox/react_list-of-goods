{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","localeCompare","length","reverse","console","log","App","useState","state","setState","className","type","ALPHABET","onClick","LENGTH","NONE","map","good","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EAAgB,GAEf,IADCC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAENC,EAAsB,YAAOH,GAoBnC,OAlBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAK,EACH,OAAOI,EAAEE,cAAcD,GACzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITN,GACFC,EAAaM,UAIfC,QAAQC,IAAIV,EAAUC,GAEfC,GAnCI,SAARN,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KAsCN,IAAMe,EAAgB,WAC3B,MAA0BC,mBAAS,CACjCX,YAAY,EACZD,SAAU,IACV,mBAHKa,EAAK,KAAEC,EAAQ,KAKtB,OACE,sBAAKC,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAS,yBACWF,EAAMb,WAAaJ,EAASqB,SAC1C,GAAK,YAGXC,QAAS,kBAAMJ,EAAS,CACtBd,SAAUJ,EAASqB,SACnBhB,YAAY,KACX,iCAKL,wBACEe,KAAK,SACLD,UAAS,4BACcF,EAAMb,WAAaJ,EAASuB,OAC7C,GAAK,YAGXD,QAAS,kBAAMJ,EAAS,CACtBd,SAAUJ,EAASuB,OACnBlB,YAAY,KACX,4BAKL,wBACEe,KAAK,SACLD,UAAS,4BACcF,EAAMZ,WACvB,GAAK,YAGXiB,QAAS,kBAAMJ,EAAS,CACtBd,SAAUa,EAAMb,SAChBC,YAAaY,EAAMZ,cAClB,sBAIgB,IAAnBY,EAAMb,WACkB,IAArBa,EAAMZ,aAEP,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMJ,EAAS,CACtBd,SAAUJ,EAASwB,KACnBnB,YAAY,KACX,sBAOX,6BACGH,EAAkBD,EAAiBgB,GACjCQ,KAAI,SAAAC,GAAI,OACP,oBACE,UAAQ,OAAM,SAGbA,GAFIA,YC9HnBC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.9fc2000e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods: string[] = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a.localeCompare(b);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState({\n    isReversed: false,\n    sortType: 0,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            `button is-info ${state.sortType === SortType.ALPHABET\n              ? '' : 'is-light'\n            }`\n          }\n          onClick={() => setState({\n            sortType: SortType.ALPHABET,\n            isReversed: false,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            `button is-success ${state.sortType === SortType.LENGTH\n              ? '' : 'is-light'\n            }`\n          }\n          onClick={() => setState({\n            sortType: SortType.LENGTH,\n            isReversed: false,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            `button is-warning ${state.isReversed\n              ? '' : 'is-light'\n            }`\n          }\n          onClick={() => setState({\n            sortType: state.sortType,\n            isReversed: !state.isReversed,\n          })}\n        >\n          Reverse\n        </button>\n        {(state.sortType !== 0\n          || state.isReversed === true)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => setState({\n                sortType: SortType.NONE,\n                isReversed: false,\n              })}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, state)\n          .map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}