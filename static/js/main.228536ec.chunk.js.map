{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EAAgB,GAEf,IADCC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAENC,EAAsB,YAAOH,GAiBnC,OAfAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKT,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,GAhCI,SAARN,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KAmCN,IAAMe,EAAgB,WAC3B,MAAoCC,oBAAS,GAAM,mBAA5CX,EAAU,KAAEY,EAAa,KAChC,EAAgCD,mBAAShB,EAASkB,MAAK,mBAAhDd,EAAQ,KAAEe,EAAW,KAE5B,OACE,sBAAKC,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYlB,IAAaJ,EAASU,WAEpCa,QAAS,WACPJ,EAAYnB,EAASU,UACrBO,EAAcZ,IACd,iCAKJ,wBACEgB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYlB,IAAaJ,EAASY,SAEpCW,QAAS,WACPJ,EAAYnB,EAASY,QACrBK,EAAcZ,IACd,4BAKJ,wBACEgB,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAajB,IAEfkB,QAAS,WACPJ,EAAYf,GACZa,GAAeZ,IACf,sBAIW,IAAbD,IACkB,IAAfC,IAED,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPJ,EAAYnB,EAASkB,MACrBD,GAAc,IACd,sBAOV,6BACGf,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CmB,KAAI,SAAAC,GAAI,OACP,oBACE,UAAQ,OAAM,SAGbA,GAFIA,YCpHnBC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.228536ec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods: string[] = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n            setIsReversed(isReversed);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n            setIsReversed(isReversed);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => {\n            setSortType(sortType);\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n        {(sortType !== 0\n          || isReversed === true)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}